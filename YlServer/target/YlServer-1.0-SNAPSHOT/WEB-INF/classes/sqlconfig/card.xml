<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- DATE_FORMAT -->
<!-- 时间转字符串：date_format -->
<!-- 字符串转时间：str_to_date -->
<!-- DATE_FORMAT(tcb.check_begin_date, '%Y-%m-%d') -->
<!-- birthday格式：%Y-%m-%d -->
<!-- 其他时间格式：- %Y-%m-%d %H:%i:%s -->
<mapper namespace="com.yl.mapper.CardMapper">
	<select id="getuserCard" resultType="com.yl.beans.UserCard"
		parameterType="Map">
		select uc.id,
		uc.userId,
		bc.id as baseCardId,
		bc.uuid,
		bc.cardNo,
		bc.cardType,
		Date_FORMAT(uc.addTime,'%Y-%m-%d %H:%i:%s')
		as
		addTime,
		uc.status,
		bc.status as cardStatus
		from basecard bc
		right join usercard
		uc on
		uc.cardNo = bc.cardNo
		left join sceniccard
		sc on
		sc.baseCardId =
		bc.id
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="userId != null">
				uc.userId = #{userId}
			</if>
			<if test="id != null">
				AND uc.id = #{id}
			</if>
			<if test="scenicId != null">
				AND sc.scenicId = #{scenicId}
			</if>
			<if test="status != null ">
				AND uc.status = #{status}
			</if>
			group by bc.cardNo
		</trim>
	</select>

	<select id="getScenicName" parameterType="Map"
		resultType="com.yl.beans.ScenicName">
		select s.scenicName, s.id as scenicId
		from scenic s
		left join
		sceniccard sc on
		sc.scenicId = s.id
		where sc.baseCardId = #{baseCardId}
	</select>



	<select id="getlineLog" parameterType="Map" resultType="com.yl.beans.LineLog">
		SELECT
		l.id as lineLogId,
		l.userId,
		l.linepriceId,
		l.attractsId,
		a.attractionsName as
		attractsName,
		a.scenicId,
		s.scenicName,
		a.lineUserCount,
		a.avgTime,
		l.number,
		DATE_FORMAT(l.arriveStartTime,
		'%H:%i') as arriveStartTime,
		DATE_FORMAT(l.arriveEndTime,'%H:%i') as
		arriveEndTime,
		l.amount,
		l.typeId,
		l.state,
		DATE_FORMAT(l.addTime,'%Y-%m-%d %H:%i:%s') as
		addTime
		from
		attracts a
		left join scenic
		s on s.id =
		a.scenicId
		right join
		linelog l on
		a.id =
		l.attractsId
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="state!=null">
				l.state = #{state}
			</if>
			<choose>
				<when test="typeId != null  and  amount !=null">
					AND l.typeId is not null AND l.amount is not null
				</when>
				<otherwise>
					AND l.typeId is null AND l.amount is null
				</otherwise>
			</choose>
			<if test="isLine!=null">
				AND a.isLine = #{isLine}
			</if>
			<if test="isVIPLine !=null">
				AND a.isVIPLine = #{isVIPLine}
			</if>
			<if test="userId !=null">
				AND l.userId = #{userId}
			</if>
			<if test="quartzNowTime_TO !=null and quartzNowTime_FROM !=null">
				<!-- AND time_to_sec(l.arriveEndTime) &gt;= -->
				<!-- time_to_sec(#{nowTime}) -->
				AND l.arriveStartTime &gt;
				STR_TO_DATE( #{quartzNowTime_FROM},
				'%Y-%m-%d %H:%i:%s'
				)
				AND l.arriveStartTime &lt;
				STR_TO_DATE(#{quartzNowTime_TO},
				'%Y-%m-%d %H:%i:%s')
			</if>
			<if test="nowTime !=null">
				<!-- AND time_to_sec(l.arriveEndTime) &gt;= -->
				<!-- time_to_sec(#{nowTime}) -->
				AND l.arriveEndTime
				&gt;= STR_TO_DATE(
				#{nowTime},
				'%Y-%m-%d %H:%i:%s')
			</if>
			<if test="startTime !=null">
				<!-- AND time_to_sec(l.arriveStartTime) = -->
				<!-- time_to_sec(#{startTime}) -->
				AND l.arriveStartTime
				&gt;= STR_TO_DATE(
				#{startTime},
				'%Y-%m-%d %H:%i:%s')
			</if>
			<if test="endTime !=null">
				<!-- AND time_to_sec(l.arriveEndTime) = -->
				<!-- time_to_sec(#{endTime}) -->
				AND l.arriveEndTime
				&gt;= STR_TO_DATE(
				#{endTime},
				'%Y-%m-%d %H:%i:%s')
			</if>
			<if test="attractsId !=null">
				AND a.id = #{attractsId}
			</if>
			<if test="scenicId !=null">
				AND a.scenicId = #{scenicId}
			</if>
			<if test="linepriceId !=null">
				AND l.linepriceId = #{linepriceId}
			</if>
			<if test="id !=null">
				AND l.id = #{id}
			</if>
			AND a.isDel = 0
		</trim>
	</select>

	<select id="getlineLogNum" parameterType="Map" resultType="Integer">
		SELECT
		IFNULL(sum(l.number),0) as
		totalNum
		from
		attracts a
		left join scenic
		s on s.id
		=
		a.scenicId
		right
		join
		linelog l on
		a.id = l.attractsId
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="state!=null">
				l.state = #{state}
			</if>
			<choose>
				<when test="typeId != null  and  amount !=null">
						AND l.typeId is not null AND l.amount is not null
				</when>
				<otherwise>
					AND l.typeId is null AND l.amount is null
				</otherwise>
			</choose>
			<if test="isLine!=null">
				AND a.isLine = #{isLine}
			</if>
			<if test="isVIPLine !=null">
				AND a.isVIPLine = #{isVIPLine}
			</if>
			<if test="userId !=null">
				AND l.userId = #{userId}
			</if>
			<if test="arriveEndTime !=null">
				<!-- AND time_to_sec(l.arriveEndTime) &gt;= -->
				<!-- time_to_sec(#{arriveEndTime}) -->
				AND l.arriveEndTime &gt;=
				STR_TO_DATE(
				#{arriveEndTime},
				'%Y-%m-%d %H:%i:%s')
			</if>
			<if test="startTime !=null">
				<!-- AND time_to_sec(l.arriveStartTime) = -->
				<!-- time_to_sec(#{startTime}) -->
				AND l.arriveStartTime =
				STR_TO_DATE(
				#{startTime},
				'%Y-%m-%d %H:%i:%s')
			</if>
			<if test="endTime !=null">
				<!-- AND time_to_sec(l.arriveEndTime) = -->
				<!-- time_to_sec(#{endTime}) -->
				AND l.arriveEndTime =
				STR_TO_DATE(
				#{endTime},
				'%Y-%m-%d %H:%i:%s')
			</if>
			<if test="attractsId !=null">
				AND a.id = #{attractsId}
			</if>
			<if test="scenicId !=null">
				AND a.scenicId = #{scenicId}
			</if>
			<if test="linepriceId !=null">
				AND l.linepriceId = #{linepriceId}
			</if>
			<if test="lineLogId !=null">
				AND l.id = #{lineLogId}
			</if>
			AND a.isDel = 0
		</trim>
	</select>

	<select id="getlineUseLogNum" parameterType="Map" resultType="Integer">
		SELECT
		IFNULL(sum(useNumber),0) as
		totalNum
		from
		lineuselog
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test=" lineLogId != null">
				lineLogId = #{lineLogId}
			</if>
			<if test="userId !=null">
				AND userId = #{userId}
			</if>
		</trim>
	</select>

	<select id="getattractsLine" resultType="com.yl.beans.AttractsLine"
		parameterType="Map">
		SELECT
		a.id as attractsId,
		a.attractionsName as
		attractsName,
		a.scenicId,
		s.scenicName,
		a.lineUserCount,
		a.avgTime
		from
		attracts a
		left join scenic s
		on s.id =
		a.scenicId
		left join linelog l on
		a.id = l.attractsId
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="isLine!=null">
				a.isLine = #{isLine}
			</if>
			<if test=" isVIPLine !=null">
				AND a.isVIPLine = #{isVIPLine}
			</if>
			<if test="attractsId !=null">
				AND a.id = #{attractsId}
			</if>
			<if test="scenicId !=null">
				AND a.scenicId = #{scenicId}
			</if>
			<if test="attractsIdList !=null">
				AND a.id not in
				<foreach item="item" index="index" collection="attractsIdList"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
			AND a.isDel = 0
			group by a.id
		</trim>
	</select>

	<insert id="saveLineLog" parameterType="Map">
		insert into linelog
		(
		userId,
		linepriceId,
		attractsId,
		number,
		arriveStartTime,
		arriveEndTime,
		amount,
		typeId,
		state,
		addTime
		)
		values
		(
		#{userId,jdbcType=INTEGER},
		#{linepriceId,jdbcType=INTEGER},
		#{attractsId,jdbcType=INTEGER},
		#{number,jdbcType=INTEGER},
		STR_TO_DATE(#{arriveStartTime,jdbcType=TIME},'%H:%i:%s'),
		STR_TO_DATE(#{arriveEndTime,jdbcType= TIME},'%H:%i:%s'),
		#{amount,jdbcType=INTEGER},
		#{typeId,jdbcType=INTEGER},
		#{state,jdbcType=INTEGER},
		str_to_date(#{addTime,jdbcType =
		DATE},'%Y-%m-%d %H:%i:%s')
		)
	</insert>

	<update id="updateLineLog" parameterType="Map">
		update linelog
		<trim prefix="SET" suffixOverrides=",">
			<if test="state1 !=null and state1>0 ">
				state = #{state1},
			</if>
		</trim>
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="lineLogId !=null">
				id = #{lineLogId}
			</if>
			<if test="state !=null and state>0 ">
				AND state = #{state}
			</if>
			<if test="userId !=null ">
				AND userId = #{userId}
			</if>
			<if test="attractsId !=null ">
				AND attractsId = #{attractsId}
			</if>
			<choose>
				<when test="typeId != null  and  amount !=null">
					AND typeId is not null AND amount is not null
				</when>
				<otherwise>
					AND typeId is null AND amount is null
				</otherwise>
			</choose>
			<if test="nowTime !=null ">
				<!-- AND time_to_sec(arriveEndTime) &lt;= -->
				<!-- time_to_sec(#{nowTime}) -->
				AND arriveEndTime &lt;=
				STR_TO_DATE(
				#{nowTime},
				'%Y-%m-%d %H:%i:%s')
			</if>
		</trim>
	</update>

	<delete id="deleteById" parameterType="Map">
		delete from
		travelnotesinfo
		where travelId = #{travelId}
		AND id = #{id}
	</delete>


	<select id="getlineTime" parameterType="Map" resultType="com.yl.beans.LineTime">
		SELECT
		lt.id as lineTimeId,
		lt.lineDateId,
		DATE_FORMAT(lt.startTime,
		'%H:%i') as startTime,
		DATE_FORMAT(lt.endTime,'%H:%i') as
		endTime,
		DATE_FORMAT(ld.lineDate,
		'%Y-%m-%d')as lineDate,
		ld.scenicId
		from
		linetime
		lt
		left join linedate ld
		on ld.id =
		lt.lineDateId
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="lineDate!=null">
				ld.lineDate =DATE_FORMAT(#{lineDate}, '%Y-%m-%d')
			</if>
			<if test="lineTimeId">
				AND lt.id =#{lineTimeId}
			</if>
			<if test="nowTime != null">
				AND time_to_sec(lt.startTime) &lt;=
				time_to_sec(#{nowTime})
				AND time_to_sec(lt.endTime) &gt;=
				time_to_sec(#{nowTime})
			</if>
			<if test="scenicId !=null">
				AND ld.scenicId = #{scenicId}
			</if>
		</trim>
		order by lt.startTime asc
	</select>

	<select id="getlinePrice" parameterType="Map" resultType="com.yl.beans.LinePrice">
		SELECT
		a.id as attractsId,
		lt.id as lineTimeId,
		a.attractionsName as
		attractsName,
		a.scenicId,
		lp.id as linepriceId,
		lp.price,
		lp.pollNumber,
		DATE_FORMAT(lt.startTime,
		'%H:%i') as startTime,
		DATE_FORMAT(lt.endTime,'%H:%i') as
		endTime
		from lineprice lp
		left join
		linetime lt on lt.id = lp.lineTimeId
		left join attracts a on
		lp.attractsId = a.id
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="lineTimeId !=null">
				lt.id = #{lineTimeId}
			</if>
			<if test="isVIPLine !=null">
				AND a.isVIPLine = #{isVIPLine}
			</if>
			<if test="attractsId !=null">
				AND lp.attractsId = #{attractsId}
			</if>
		</trim>
		order by lt.startTime asc
	</select>

	<select id="getlinePriceDetails" parameterType="Map"
		resultType="com.yl.beans.LinePriceDetails">
		SELECT
		lp.id as attractsId,
		lt.id as lineTimeId,
		ld.scenicId,
		lp.id as
		linepriceId,
		lp.price,
		lp.pollNumber,
		DATE_FORMAT(lt.startTime,
		'%H:%i:%s') as startTime,
		DATE_FORMAT(lt.endTime,'%H:%i:%s') as
		endTime,
		DATE_FORMAT(ld.lineDate,
		'%Y-%m-%d') as lineDate
		from linetime
		lt
		left join lineprice lp on lt.id = lp.lineTimeId
		left
		join linedate ld
		on lt.lineDateId = ld.id
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="lineTimeId !=null">
				lt.id = #{lineTimeId}
			</if>
			<if test="attractsId !=null">
				AND lp.attractsId = #{attractsId}
			</if>
			<if test="linepriceId !=null">
				AND lp.id = #{linepriceId}
			</if>
		</trim>
		order by lt.startTime asc
	</select>

	<insert id="savecard" parameterType="Map">
		insert into sceniccard
		(
		scenicId,
		typeId,
		cardNo,
		checkCode,
		status
		)
		values
		(
		#{scenicId,jdbcType=INTEGER},
		#{typeId,jdbcType=INTEGER},
		#{cardNo,jdbcType=VARCHAR},
		#{checkCode,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER}
		)
	</insert>

	<select id="getScenicCardType" parameterType="Map"
		resultType="com.yl.beans.ScenicCardType">
		select cardType,price,usePrice,
		DATE_FORMAT(date,'%Y-%m-%d') as date
		from sceniccardtype
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="scenicId !=null">
				scenicId = #{scenicId}
			</if>
			<if test="cardType !=null">
				AND cardType = #{cardType}
			</if>
			<if test="date !=null">
				AND date = STR_TO_DATE(#{date},'%Y-%m-%d')
			</if>
		</trim>
	</select>

	<select id="getCardNum" parameterType="Map" resultType="Map">
		SELECT b.* from basecard b LEFT JOIN usercard u on u.cardNo = b.cardNo
		LEFT
		JOIN sceniccard s on s.baseCardId = b.id
		<trim prefix="WHERE" prefixOverrides="AND">
			s.id is not null
			<if test="scenicId !=null">
				AND s.scenicId = #{scenicId}
			</if>
			<if test="type !=null">
				AND u.id is null
			</if>
			<if test="cardType !=null">
				AND b.cardType = #{cardType}
			</if>
			<if test="userId != null">
				AND u.userId = #{userId}
			</if>
		</trim>
	</select>

	<select id="getCardExpand" parameterType="Map"
		resultType="com.yl.beans.CardExpand">
		select ce.id,
		ce.cardNum,
		ce.cardUseNum,
		ce.cardType,
		ce.orderNo,
		ce.status,
		DATE_FORMAT(ce.appointment,'%Y-%m-%d') as appointment,
		ce.scenicId
		from
		cardexpand ce
		left join `order` o on o.orderNo = ce.orderNo
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="scenicId !=null">
				ce.scenicId = #{scenicId}
			</if>
			<if test="orderNo !=null">
				AND ce.orderNo = #{orderNo}
			</if>
			<if test="status != null">
				AND ce.status = #{status}
			</if>
			<if test="cardType !=null">
				AND ce.cardType = #{cardType}
			</if>
			<if test="userId != null">
				AND o.userId = #{userId}
			</if>
			<if test="appointment!=null">
				AND ce.appointment =STR_TO_DATE( #{appointment},'%Y-%m-%d')
			</if>
		</trim>
	</select>
	
	<update id="operateCardexpand" parameterType="Map">
		update cardexpand
		<trim prefix="SET" suffixOverrides=",">
			<if test="status1 !=null ">
				status = #{status1},
			</if>
		</trim>
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="scenicId !=null">
				scenicId = #{scenicId}
			</if>
			<if test="orderNo !=null">
				AND orderNo = #{orderNo}
			</if>
			<if test="status != null">
				AND status = #{status}
			</if>
			<if test="cardType !=null">
				AND cardType = #{cardType}
			</if>
			<if test="userId != null">
				AND userId = #{userId}
			</if>
			<if test="appointment!=null">
				AND appointment =STR_TO_DATE( #{appointment},'%Y-%m-%d')
			</if>
		</trim>
	</update>
	<insert id="saveCardExpand" parameterType="Map">
		insert into cardexpand
		(
		cardNum,
		cardUseNum,
		cardType,
		orderNo,
		status,
		appointment,
		scenicId
		)
		values
		(
		#{cardNum,jdbcType=INTEGER},
		#{cardUseNum,jdbcType=INTEGER},
		#{cardType,jdbcType=INTEGER},
		#{orderNo,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER},
		str_to_date(#{appointment,jdbcType =
		DATE},'%Y-%m-%d'),
		#{scenicId,jdbcType=INTEGER}
		)
	</insert>
	
		<select id="getlineTimeByAttractsId" parameterType="Map" resultType="com.yl.beans.LinePrice">
		SELECT
		lt.id as lineTimeId,
		DATE_FORMAT(lt.startTime,
		'%H:%i') as startTime,
		DATE_FORMAT(lt.endTime,'%H:%i') as
		endTime,
		lp.id as linepriceId,
		lp.price,
		lp.pollNumber,
		DATE_FORMAT(ld.lineDate,
		'%Y-%m-%d') as lineDate
		from
		linetime
		lt
		left join linedate ld
		on ld.id =
		lt.lineDateId
		right join lineprice lp on lp.lineTimeId = lt.id
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="lineDate!=null">
				ld.lineDate =DATE_FORMAT(#{lineDate}, '%Y-%m-%d')
			</if>
			<if test="lineTimeId">
				AND lt.id =#{lineTimeId}
			</if>
			<if test="nowTime != null">
				AND time_to_sec(lt.startTime) &lt;=
				time_to_sec(#{nowTime})
				AND time_to_sec(lt.endTime) &gt;=
				time_to_sec(#{nowTime})
			</if>
			<if test="attractsId !=null">
				AND lp.attractsId = #{attractsId}
			</if>
		</trim>
		order by lt.startTime asc
	</select>
	
	
</mapper>